{"version":3,"mappings":"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","names":["handleAuthError","error","message","app","initializeApp","firebaseConfig","auth","getAuth","getFirestore","googleProvider","GoogleAuthProvider","githubProvider","GithubAuthProvider","loginForm","googleLoginBtn","githubLoginBtn","logoutBtn","showSignupBtn","showLoginBtn","signupForm","settingsBtn","settingsModal","closeSettings","themeButtons","setTheme","theme","updateActiveTheme","btn","savedTheme","switchToSignup","switchToLogin","redirectToHome","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signInWithPopup","signOut","onAuthStateChanged","user","handleAuthenticatedUser","__vitePreload","handleUnauthenticatedUser","handleGoogleLogin","provider","_a"],"ignoreList":[],"sources":["../../src/js/utils/auth-utils.js","../../src/js/app.js"],"sourcesContent":["export function handleAuthError(error) {\n  console.error('Auth Error:', error);\n  const message = error.message || 'Authentication error occurred';\n  alert(message);\n}\n\nexport function redirectToHome() {\n  window.location.href = '/AG-Home/home.html';\n}\n\nexport function redirectToLogin() {\n  window.location.href = '/AG-Home/index.html';\n}\n","// Import Firebase services\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { firebaseConfig } from './firebase-config.js';\nimport { \n    signInWithEmailAndPassword, \n    signInWithPopup,\n    GoogleAuthProvider,\n    GithubAuthProvider,\n    signOut,\n    createUserWithEmailAndPassword\n} from 'firebase/auth';\nimport { doc, setDoc, deleteDoc } from 'firebase/firestore';\nimport { handleAuthError } from './utils/auth-utils';\n\nconsole.log(\"App.js loaded\");\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\n\n// Auth providers\nconst googleProvider = new GoogleAuthProvider();\nconst githubProvider = new GithubAuthProvider();\n\n// Get DOM elements\nconst loginForm = document.getElementById('login');\nconst googleLoginBtn = document.getElementById('googleLogin');\nconst githubLoginBtn = document.getElementById('githubLogin');\nconst logoutBtn = document.getElementById('logoutBtn');\n\n// Get additional DOM elements\nconst showSignupBtn = document.getElementById('showSignup');\nconst showLoginBtn = document.getElementById('showLogin');\nconst signupForm = document.getElementById('signup');\n\n// Settings handlers\nconst settingsBtn = document.getElementById('settingsBtn');\nconst settingsModal = document.getElementById('settingsModal');\nconst closeSettings = document.getElementById('closeSettings');\nconst themeButtons = document.querySelectorAll('.theme-btn');\n\n// Theme handling\nfunction setTheme(theme) {\n    document.body.setAttribute('data-theme', theme);\n    localStorage.setItem('theme', theme);\n    updateActiveTheme(theme);\n}\n\nfunction updateActiveTheme(theme) {\n    themeButtons.forEach(btn => {\n        btn.classList.toggle('active', btn.getAttribute('data-theme') === theme);\n    });\n}\n\n// Initialize theme\nconst savedTheme = localStorage.getItem('theme') || 'dark';\nsetTheme(savedTheme);\n\n// Settings event listeners\nsettingsBtn.addEventListener('click', () => {\n    settingsModal.classList.remove('hidden');\n    updateActiveTheme(document.body.getAttribute('data-theme'));\n});\n\ncloseSettings.addEventListener('click', () => {\n    settingsModal.classList.add('hidden');\n});\n\nthemeButtons.forEach(btn => {\n    btn.addEventListener('click', () => {\n        const theme = btn.getAttribute('data-theme');\n        setTheme(theme);\n    });\n});\n\n// Close modal when clicking outside\nsettingsModal.addEventListener('click', (e) => {\n    if (e.target === settingsModal) {\n        settingsModal.classList.add('hidden');\n    }\n});\n\n// Navigation between login and signup with transitions\nfunction switchToSignup() {\n    const loginForm = document.getElementById('loginForm');\n    const signupForm = document.getElementById('signupForm');\n    \n    loginForm.classList.add('slide-out-left');\n    signupForm.classList.remove('hidden');\n    \n    // Small delay to trigger transition\n    setTimeout(() => {\n        signupForm.classList.remove('slide-out-right');\n    }, 10);\n    \n    // Hide login form after animation\n    setTimeout(() => {\n        loginForm.classList.add('hidden');\n    }, 500);\n}\n\nfunction switchToLogin() {\n    const loginForm = document.getElementById('loginForm');\n    const signupForm = document.getElementById('signupForm');\n    \n    signupForm.classList.add('slide-out-right');\n    loginForm.classList.remove('hidden');\n    \n    // Small delay to trigger transition\n    setTimeout(() => {\n        loginForm.classList.remove('slide-out-left');\n    }, 10);\n    \n    // Hide signup form after animation\n    setTimeout(() => {\n        signupForm.classList.add('hidden');\n    }, 500);\n}\n\n// Update event listeners\nshowSignupBtn.addEventListener('click', switchToSignup);\nshowLoginBtn.addEventListener('click', switchToLogin);\n\n// Add redirect function\nfunction redirectToHome() {\n    window.location.href = '/home.html';\n}\n\n// Handle login form submission\nloginForm.addEventListener('submit', async (e) => {\n    e.preventDefault();\n    const email = loginForm.querySelector('input[type=\"email\"]').value;\n    const password = loginForm.querySelector('input[type=\"password\"]').value;\n\n    try {\n        await signInWithEmailAndPassword(auth, email, password);\n        redirectToHome();\n    } catch (error) {\n        console.error('Login error:', error);\n        alert('Login failed: ' + error.message);\n    }\n});\n\n// Handle signup form submission\nsignupForm.addEventListener('submit', async (e) => {\n    e.preventDefault();\n    const email = signupForm.querySelector('input[type=\"email\"]').value;\n    const password = signupForm.querySelector('input[type=\"password\"]').value;\n\n    try {\n        await createUserWithEmailAndPassword(auth, email, password);\n        redirectToHome();\n    } catch (error) {\n        console.error('Signup error:', error);\n        alert('Signup failed: ' + error.message);\n    }\n});\n\n// Handle Google login\ngoogleLoginBtn.addEventListener('click', async () => {\n    try {\n        await signInWithPopup(auth, googleProvider);\n        redirectToHome();\n    } catch (error) {\n        console.error('Google login error:', error);\n        alert('Google login failed: ' + error.message);\n    }\n});\n\n// Handle GitHub login\ngithubLoginBtn.addEventListener('click', async () => {\n    try {\n        await signInWithPopup(auth, githubProvider);\n        redirectToHome();\n    } catch (error) {\n        console.error('GitHub login error:', error);\n        alert('GitHub login failed: ' + error.message);\n    }\n});\n\n// Handle logout\nlogoutBtn.addEventListener('click', async () => {\n    try {\n        await signOut(auth);\n        // Show login form after logout\n        document.getElementById('loginForm').classList.remove('hidden');\n        document.getElementById('userDisplay').textContent = '';\n        document.getElementById('logoutBtn').classList.add('hidden');\n    } catch (error) {\n        console.error('Logout error:', error);\n        alert('Logout failed: ' + error.message);\n    }\n});\n\n// Listen for auth state changes\nonAuthStateChanged(auth, async (user) => {\n  try {\n    if (user) {\n      const { default: handleAuthenticatedUser } = await import('./modules/authenticated');\n      handleAuthenticatedUser(user);\n    } else {\n      const { default: handleUnauthenticatedUser } = await import('./modules/unauthenticated');\n      handleUnauthenticatedUser();\n    }\n  } catch (error) {\n    handleAuthError(error);\n  }\n});\n\n// Handle Google login with custom parameters\nconst handleGoogleLogin = async (e) => {\n    e.preventDefault();\n    try {\n        const provider = new GoogleAuthProvider();\n        provider.setCustomParameters({\n            prompt: 'select_account'\n        });\n        await signInWithPopup(auth, provider);\n    } catch (error) {\n        if (error.code !== 'auth/cancelled-popup-request') {\n            console.error('Google login error:', error);\n            alert('Login failed. Please try again.');\n        }\n    }\n};\n\ndocument.getElementById('googleLogin')?.addEventListener('click', handleGoogleLogin);"],"file":"js/index-BFb3Ss52.js"}